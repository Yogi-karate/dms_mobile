version: "3.7"

# these are vars to pick from /.env on build and run.
# leave the optionals empty
x-apibuildvars: &apibuildvars
  LOG_LEVEL: ${LOG_LEVEL:-notice}
  NODE_ENV: ${NODE_ENV:-development}
  PORT: ${API_PORT:-8000}
x-apirunvars: &apirunvars
  <<: *apibuildvars
  APP_PORT: ${APP_PORT:-3000}
  URL_APP: ${URL_APP:-http://app.dms.localhost:3000}
  URL_API: ${URL_API:-http://api.dms.localhost:8000}
  COOKIE_DOMAIN: ${COOKIE_DOMAIN:-.dms.localhost}
  MONGO_URL: ${MONGO_URL:-mongodb://saas:secret@saas-mongo:27017/saas}
  SESSION_NAME: ${SESSION_NAME:-saas.localhost.sid}
  SESSION_SECRET: ${SESSION_SECRET:-D0cK3RS3Cr3t!}
  GOOGLE_CLIENTID:
  GOOGLE_CLIENTSECRET:
  AMAZON_ACCESSKEYID:
  AMAZON_SECRETACCESSKEY:
  EMAIL_SUPPORT_FROM_ADDRESS:

x-appvars: &appvars
  LOG_LEVEL: ${LOG_LEVEL:-notice}
  NODE_ENV: ${NODE_ENV:-development}
  PORT: ${APP_PORT:-3000}
  API_PORT: ${API_PORT:-8000}
  URL_APP: ${URL_APP:-http://app.dms.localhost:3000}
  API_URL: ${URL_API:-http://api.dms.localhost:8000}

services:
  dms-api:
    build:
      context: api
      args: *apibuildvars
    image: dms-api:${COMPOSE_TAG_NAME:-stage}
    container_name: dms-api
    networks:
      default:
        aliases:
          - api.dms.localhost
    environment: *apirunvars
    ports:
      - "${API_PORT:-8000}:${API_PORT:-8000}"
    command: npm start

  dms-app:
    build:
      context: dms_app
      args: *appvars
    image: dms-app:${COMPOSE_TAG_NAME:-stage}
    container_name: dms-app
    networks:
      default:
        aliases:
          - app.dms.localhost
    environment: *appvars
    ports:
      - "${APP_PORT:-3000}:${APP_PORT:-3000}"
    depends_on:
      - dms-api
    command: npm start

networks:
  default:
    driver: bridge
